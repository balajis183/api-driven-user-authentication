
Deployment Guide for React App on GitHub Pages

------------------------------------------------------------
Step 1: Install gh-pages
------------------------------------------------------------
Problem: We need to deploy a React application on GitHub Pages.
Solution: Install gh-pages as a development dependency.

Command:
npm install gh-pages --save-dev

- This installs gh-pages only for development purposes.
- It does not affect the production build.
------------------------------------------------------------
Step 2: Add "homepage" to package.json
------------------------------------------------------------
Problem: GitHub Pages needs to know where to serve the app.
Solution: Add the homepage field in package.json.

Example:
"homepage": "https://yourusername.github.io/repository-name"

------------------------------------------------------------
Step 3: Modify package.json scripts
------------------------------------------------------------
Problem: We need automated build and deployment steps.
Solution: Modify the "scripts" section in package.json.

Updated scripts:
"scripts": {
  "start": "react-scripts start",
  "build": "react-scripts build",
  "predeploy": "npm run build",
  "deploy": "gh-pages -d build"
}

Explanation:
- "predeploy": Runs "npm run build" before deploying.
- "deploy": Uses gh-pages to push the build folder to GitHub.

------------------------------------------------------------
Step 4: Commit and Push Changes
------------------------------------------------------------
Problem: Changes must be updated on GitHub before deployment.
Solution: Commit changes and push them.

Commands:
git add .
git commit -m "Added deployment settings"
git push origin main

------------------------------------------------------------
Step 5: Run Deployment Command
------------------------------------------------------------
Problem: Need to publish the React app on GitHub Pages.
Solution: Run the deploy command.

Command:
npm run deploy

- This creates a "gh-pages" branch and uploads the build files.

------------------------------------------------------------
Step 6: Enable GitHub Pages
------------------------------------------------------------
Problem: GitHub needs to recognize the deployment branch.
Solution: Go to repository settings on GitHub.

Steps:
1. Open GitHub Repository > Settings.
2. Navigate to "Pages" in the sidebar.
3. Under "Branch," select "gh-pages" and click Save.

------------------------------------------------------------
Step 7: Fix React Router Issue (Optional)
------------------------------------------------------------
Problem: React Router may break on GitHub Pages.
Solution: Use HashRouter instead of BrowserRouter.

Example Fix:
import { HashRouter as Router } from "react-router-dom";

<Router>
  <Routes>
    <Route path="/" element={<Home />} />
  </Routes>
</Router>

------------------------------------------------------------
Step 8: Access the Deployed Site
------------------------------------------------------------
Your React app is now live at:
https://yourusername.github.io/repository-name

------------------------------------------------------------
Troubleshooting
------------------------------------------------------------
1. **Deployment fails with remote.origin.url error:**
   - Ensure git is initialized inside the project folder.
   - Run `git remote add origin https://github.com/yourusername/repository-name.git`

2. **Changes not reflecting after deploy:**
   - Run `npm run build` and `npm run deploy` again.

3. **Site only shows README.md instead of React app:**
   - Ensure "gh-pages" is selected in GitHub Pages settings.

4. **Navigation issues (404 error on refresh):**
   - Use HashRouter instead of BrowserRouter.

------------------------------------------------------------
End of Guide
------------------------------------------------------------
